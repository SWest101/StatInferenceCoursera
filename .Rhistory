output: html_document
---
##Overview
For the purpose of this assignment, we'll be exploring the estimation of population parameters from samples by using the Central Limit Theorem. It will be shown that, given enough samples, the mean of will be approximately normal and act as a good estimate for the population.
##Simulations
The following code generates a dataframe with a 1000 rows of 40 randomly generated numbers (40000 in total) from an exponential distribution.
It then calculates the mean and standard deviation of each row.
```{r echo=TRUE}
# Load required libraries
library(ggplot2)
library(gridExtra)
set.seed(42)        # Set random number generator seed for reproducibility
n <- 40             # Number of exponentials to generate per simulation
lambda <- 0.2       # Rate parameter for rexp function
mu <- 1/lambda      # mean
sig <- 1/lambda     # standard deviation
vars <- sig^2       # calculate the variance
sim.count <- 1000   # Number of simulation to run
dis.matrix <- NULL  # Initialising data frame
# Run simulation to generate a sim.count by n (1000 x 40) data frame
for(i in 1:sim.count){
dis.matrix <- rbind(dis.matrix,rexp(n, lambda))
}
dis.matrix.stacked <- as.data.frame(stack(as.data.frame(dis.matrix))$values)
# Calculate the row means
rms <- as.data.frame(rowMeans(dis.matrix))
colnames(rms) <- "mean"
# Calculate the row standard deviations
sds <- as.data.frame(apply(dis.matrix, 1, sd))
colnames(sds) <- "std"
t.test(rms$mean)$conf.int
normtest <- shapiro.test(rms$mean)
```
## Graphs
THe first graph represents a histogram of the random samples generated from a exponential distribution.
The second graph represents the mean of 40 exponential generated samples using the same parameters.
We can see that the distribution appears approximately normally distributed as a result of the Central Limit Theorem.
According to the Shapiro-Wilks test for normality, p = `r normtest$p.value` < 0.05 so there is insufficient evidence to reject the null hypothesis.
```{r echo=TRUE}
mean.plot <- ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")+
geom_vline(xintercept = mu, colour="red")+
geom_vline(xintercept = mean(as.matrix(rms)), colour="green")+
geom_text(aes(x=mu, label=paste0("Theoretical mean = ", mu), y=10), colour="red")+
geom_text(aes(x=mean(as.matrix(rms)), label=paste0("Sample mean = ", round(mean(as.matrix(rms)),2)), y=30), colour="green")
exp.plot <- ggplot(dis.matrix.stacked, aes(x= dis.matrix.stacked))+
geom_histogram(fill="blue", colour="black", bins = 30)+
scale_x_continuous()+
labs(title="Exponential distribution", x="Exponential value", y="Count")
grid.arrange(exp.plot, mean.plot, ncol = 2)
```
The following graph represents the variance of the means of the exponential distribution.
Unlike the distributions of the mean, it will not always approximate to another distribution.
```{r echo=TRUE}
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black", bins=30)+
scale_x_continuous()+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label=paste0("Theoretical variance = ", vars), y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label=paste0("Sample variance = ", round(mean(sds^2),2)), y=30), colour="green")
```
---
title: "Statistical Inferences and simulations"
author: "Shaun"
date: "February 19, 2017"
output: html_document
---
##Overview
For the purpose of this assignment, we'll be exploring the estimation of population parameters from samples by using the Central Limit Theorem. It will be shown that, given enough samples, the mean of will be approximately normal and act as a good estimate for the population.
##Simulations
The following code generates a dataframe with a 1000 rows of 40 randomly generated numbers (40000 in total) from an exponential distribution.
It then calculates the mean and standard deviation of each row.
```{r echo=TRUE}
# Load required libraries
library(ggplot2)
library(gridExtra)
set.seed(42)        # Set random number generator seed for reproducibility
n <- 40             # Number of exponentials to generate per simulation
lambda <- 0.2       # Rate parameter for rexp function
mu <- 1/lambda      # mean
sig <- 1/lambda     # standard deviation
vars <- sig^2       # calculate the variance
sim.count <- 1000   # Number of simulation to run
dis.matrix <- NULL  # Initialising data frame
# Run simulation to generate a sim.count by n (1000 x 40) data frame
for(i in 1:sim.count){
dis.matrix <- rbind(dis.matrix,rexp(n, lambda))
}
dis.matrix.stacked <- as.data.frame(stack(as.data.frame(dis.matrix))$values)
# Calculate the row means
rms <- as.data.frame(rowMeans(dis.matrix))
colnames(rms) <- "mean"
# Calculate the row standard deviations
sds <- as.data.frame(apply(dis.matrix, 1, sd))
colnames(sds) <- "std"
normtest <- shapiro.test(rms$mean)
```
## Graphs
The first graph represents a histogram of the random samples generated from a exponential distribution.
The second graph represents the mean of 40 exponential generated samples using the same parameters.
The mean of the mean sample distribution has a 95% confidence interval of `r t.test(rms$mean)$conf.int` where the theoretical mean is `r mu`.
We can see that the distribution appears approximately normally distributed as a result of the Central Limit Theorem.
According to the Shapiro-Wilks test for normality, p = `r normtest$p.value` < 0.05 so there is insufficient evidence to reject the null hypothesis with 95% certainty.
```{r echo=TRUE}
mean.plot <- ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")+
geom_vline(xintercept = mu, colour="red")+
geom_vline(xintercept = mean(as.matrix(rms)), colour="green")+
geom_text(aes(x=mu, label=paste0("Theoretical mean = ", mu), y=10), colour="red")+
geom_text(aes(x=mean(as.matrix(rms)), label=paste0("Sample mean = ", round(mean(as.matrix(rms)),2)), y=30), colour="green")
exp.plot <- ggplot(dis.matrix.stacked, aes(x= dis.matrix.stacked))+
geom_histogram(fill="blue", colour="black", bins = 30)+
scale_x_continuous()+
labs(title="Exponential distribution", x="Exponential value", y="Count")
grid.arrange(exp.plot, mean.plot, ncol = 2)
```
The following graph represents the variance of the means of the exponential distribution.
Unlike the distributions of the mean, it will not always approximate to another distribution.
The difference between the theoretical distribution and the sample distribution is `r vars - mean(sds^2)`.
```{r echo=TRUE}
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black", bins=30)+
scale_x_continuous()+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label=paste0("Theoretical variance = ", vars), y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label=paste0("Sample variance = ", round(mean(sds^2),2)), y=30), colour="green")
```
plot(dnorm(mean=mu, sd=sds))
plot(x=seq(-4, 4, length=100), y= dnorm(mean=mu, sd=sds))
plot(x = seq(-4, 4, length=100), y= dnorm(mean=mu, sd=sds))
dnorm(mu=mu, sd=sds)
dnorm(mean=mu, sd=sds)
dnorm(0,mean=mu, sd=sds)
dnorm(rms,mean=mu, sd=sds)
dnorm(rms$mean,mean=mu, sd=sds)
dnorm(rms$mean,mean=mu, sd=sds$std)
dnorm(0,mean=mu, sd=sds$std)
dnorm(0,mean=mu, sd=sds$std)
dnorm(0,mean=mu, sd=sds$std)
plot(dnorm(0,mean=mu, sd=sds$std))
plot(x= seq(0,8), dnorm(0,mean=mu, sd=sds$std))
qqnorm(rms$mean)
qqline(rms$mean)
qqLine(rms$mean)
qqline(rms$mean)
qqplot(rms$mean, rnorm(0,mean=mu,sd =sds$std))
qqline(rms$mean)
qqline(rms$mean)
qqnorm(rms$mean)
qqline(rms$mean)
qqnorm(rms$mean)
qqnorm(rms$mean); qqline(rms$mean)
sim.count <- 5000   # Number of simulation to run
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density()+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(y=dnorm(0,mean=mu,sd=sds$std)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data= dnorm(0,mean=mu,sd=sds$std))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data = as.data.frame(dnorm(0,mean=mu,sd=sds$std)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
stat_density(data = as.data.frame(dnorm(0,mean=mu,sd=sds$std)), geom="line")+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data = as.data.frame(dnorm(rms,mean=mu,sd=sds$std)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data = as.data.frame(dnorm(rms$mean,mean=mu,sd=sds$std)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density()+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(rnorm(mean=mu,sd=mean(sds$std)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
plot(rnorm(mean=mu, sd = mean(sds)))
rnorm(mean=mu, sd = mean(sds))
dnorm(mean=mu, sd = mean(sds))
rnorm(1000,mean=mu, sd = mean(sds))
rnorm(1000, mean = mu, sd = mean(sds$std))
plot(rnorm(1000, mean = mu, sd = mean(sds$std)))
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(rnorm(1000, mean = mu, sd = mean(sds$std)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data = rnorm(1000, mean = mu, sd = mean(sds$std)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data = as.data.framernorm(1000, mean = mu, sd = mean(sds$std))))+
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data = as.data.framernorm(1000, mean = mu, sd = mean(sds$std)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data = as.data.frame(rnorm(1000, mean = mu, sd = mean(sds$std))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(data = as.data.frame(rnorm(1000, mean = mu, sd = mean(sds$std))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(1000, mean = mu, sd = mean(sds$std)))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(1000, mean = mu, sd = mean(sds$std)))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(1000, mean = mu, sd = mean(sds$std)))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(1000, mean = mu, sd = mean(sds$std)))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(0, mean = mu, sd = mean(sds$std)))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(0, mean = mu, sd = sig)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(0, mean = mu, sd = sig)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(1, mean = mu, sd = sig)))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(1, mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(0, mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(rms, mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(rms$mean, mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(seq(0,8), mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(0, mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(1000, mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(10000, mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(100000, mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
x   <- seq(5,15,length=1000)
y   <- dnorm(x,mean=10, sd=3)
plot(x,y, type="l", lwd=1)
hist(rms)
hist(rms$mean)
plot(x,y, type="l", lwd=1)
hist(rms$mean)
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(dnorm(seq(5,15,length=1000), mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(seq(5,15,length=1000), mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(seq(5,15,length=10000), mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(seq(5,15,length=100000), mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
# geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(seq(5,15,length=1000000), mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(seq(5,15,length=1000000), mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
#geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(seq(5,15,length=1000000), mean = mu, sd = sig))))+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
#geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(seq(5,15,length=1000000), mean = mu, sd = sig))), stat = "density")+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
#geom_histogram(fill="blue", colour="black", bins = 30)+
geom_density(aes(x= as.data.frame(rnorm(seq(5,15,length=1000000), mean = mu, sd = sig))), stat = "frequency")+
scale_x_continuous()+
labs(title="Mean exponential distribution", x="Mean", y="Count")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
stat_function(fun = dnorm, args = list(mean = mean(rms$mean), sd = sd(rms$mean)), lwd = 2, col = 'red')
ggplot(rms, aes(x= rms))+
geom_histogram(aes(y=...density...), fill="blue", colour="black", bins = 30)+
stat_function(fun = dnorm, args = list(mean = mean(rms$mean), sd = sd(rms$mean)), lwd = 2, col = 'red')
ggplot(rms, aes(x= rms))+
geom_histogram(aes(y=..density..), fill="blue", colour="black", bins = 30)+
stat_function(fun = dnorm, args = list(mean = mean(rms$mean), sd = sd(rms$mean)), lwd = 2, col = 'red')
library(datasets)
data("ToothGrowth")
str(ToothGrowth)
View(ToothGrowth)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
ggplot(ToothGrowth, aes(y = len, x = supp))+
geom_boxplot(aes(fill = supp))+
facet_wrap(~ dose)
ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_boxplot(aes(fill = supp))
ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_boxplot()
ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_boxplot(fill="blue")
ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_boxplot(fill="blue")+
labs(title="Boxplot of dosages", x="Dosage", y="Length")
dosage.graph <- ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_boxplot(fill="blue")+
labs(title="Boxplot of dosages", x="Dosage", y="Length")
supp.graph <- ggplot(ToothGrowth, aes(y = len, x = supp))+
geom_boxplot(fill="blue")+
labs(title="Boxplot of delivery method", x="Delivery method", y="Length")
grid.arrange(dosage.graph, supp.graph, ncol=2)
dosage.graph <- ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_boxplot(fill=dose)+
labs(title="Boxplot of dosages", x="Dosage", y="Length")
supp.graph <- ggplot(ToothGrowth, aes(y = len, x = supp))+
geom_boxplot(fill=supp)+
labs(title="Boxplot of delivery method", x="Delivery method", y="Length")
dosage.graph <- ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_boxplot(aes(fill=dose))+
labs(title="Boxplot of dosages", x="Dosage", y="Length")
supp.graph <- ggplot(ToothGrowth, aes(y = len, x = supp))+
geom_boxplot(aes(fill=supp))+
labs(title="Boxplot of delivery method", x="Delivery method", y="Length")
grid.arrange(dosage.graph, supp.graph, ncol=2)
tapply(ToothGrowth$len, ToothGrowth$dose, summary)
tapply(ToothGrowth$len, ToothGrowth$supp, summary)
dosage.graph <- ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_histogram(aes(fill=dose))+
labs(title="Histogram of dosages", x="Dosage", y="Length")
dosage.graph <- ggplot(ToothGrowth, aes(y = len, x = dose))+
geom_histogram(aes(fill=dose))+
labs(title="Histogram of dosages", x="Dosage", y="Length")
supp.graph <- ggplot(ToothGrowth, aes(y = len, x = supp))+
geom_histogram(aes(fill=supp))+
labs(title="Histogram of delivery method", x="Delivery method", y="Length")
grid.arrange(dosage.graph, supp.graph, ncol=2)
dosage.graph <- ggplot(ToothGrowth, aes(x = len))+
geom_histogram(aes(fill=dose))+
labs(title="Histogram of dosages", x="Dosage", y="Length")
supp.graph <- ggplot(ToothGrowth, aes(x = len))+
geom_histogram(aes(fill=supp))+
labs(title="Histogram of delivery method", x="Delivery method", y="Length")
grid.arrange(dosage.graph, supp.graph, ncol=2)
tapply(ToothGrowth$len, ToothGrowth$dose, summary)[1]
dose.summary<-tapply(ToothGrowth$len, ToothGrowth$dose, summary)
supp.summary <- tapply(ToothGrowth$len, ToothGrowth$supp, summary)
dose.summary[1]
dose.summary[1][1]
dose.summary[[1]]
dose.summary[[1]][1]
table(dose.summary)
dose.summary <- tapply(ToothGrowth$len, ToothGrowth$dose, mean)
table(dose.summary)
library(dplyr)
dose.summary <- ToothGrowth %>% group_by(dose)
dose.summary
dose.summary <- ToothGrowth %>% group_by(dose) %>% summarise()
dose.summary
dose.summary <- ToothGrowth %>% group_by(dose) %>% summarise(len)
dose.summary <- ToothGrowth %>% group_by(dose) %>% summarise(mean(len))
dose.summary
dose.summary <- ToothGrowth %>% group_by(dose)
dose.summary
dose.summary <- ToothGrowth %>% group_by(dose) %>% table()
dose.summary
dose.summary <- ToothGrowth %>% group_by(dose) %>% table(mean(len))
dose.summary <- ToothGrowth %>% group_by(dose) %>% table(summary(mean(len)))
dose.summary <- ToothGrowth %>% group_by(dose) %>% mean(len)
dose.summary <- ToothGrowth %>% group_by(dose) %>% summary()
dose.summary
dose.summary <- ToothGrowth %>% group_by(dose) %>% summarise()
dose.summary
dose.summary <- ToothGrowth %>% group_by(dose) %>% summarise_each()
dose.summary <- ToothGrowth %>% group_by(dose) %>% summarise_each(len, mean)
dose.summary <- ToothGrowth %>% group_by(dose) %>% summarise_each( mean)
dose.summary <- ToothGrowth %>% group_by(dose) %>% summarise
dose.summary
dose.summary <- tapply(ToothGrowth$len, ToothGrowth$dose, summary)
table(dose.summary)
dose.summary
suppressMessages(library(dplyr))
dose.summary
supp.summary
t.test(ToothGrowth, formula = len ~ dose)
t.test(ToothGrowth, formula = len ~ dose, paired = F, var.equal = F)
t.test(data = ToothGrowth, formula = len ~ dose, paired = F, var.equal = F)
t.test(data = ToothGrowth, formula = len ~ supp, paired = F, var.equal = F)
t.test(data = ToothGrowth, len ~ supp, paired = F, var.equal = F)
shapiro.test(rnorm(1000, mean = mu, sd= sig))
shapiro.test(rnorm(10000, mean = mu, sd= sig))
shapiro.test(rnorm(5000, mean = mu, sd= sig))
normtest
qqplot(rms$mean)
qqnorm(rms)
qqnorm(rms$mean)
qqline(rms$mean, colour="red")
qqline(rms$mean, col="red")
qqnorm(rms$mean)
qqline(rms$mean, col="red")
dev.off()
qqnorm(rms$mean)
qqline(rms$mean, col="red")
qqnorm(rms$mean)
qqline(rms$mean, col="red")
tresults <- t.test(data = ToothGrowth, len ~ supp, paired = F, var.equal = F)
tresults
dose.tresults <- pairwise.t.test( ToothGrowth$len, ToothGrowth$supp, p.adj = "bonf", paired = F, var.equal = F)
dose.tresults
dose.tresults <- pairwise.t.test( ToothGrowth$len, ToothGrowth$dose, p.adj = "bonf", paired = F, pool.sd = F)
dose.tresults
