library(ggplot2)
library(ggplot2)
n <- 40             # Number of exponentials to generate per simulation
lambda <- 0.2       # Rate parameter for rexp function
sig <- 1/lambda     # standard deviation
vars <- sig^2       # calculate the variance
sim.count <- 1000   # Number of simulation to run
dis.matrix <- NULL  # Initialising data frame
for(i in 1:sim.count){
dis.matrix <- rbind(dis.matrix,rexp(n, lambda))
}
rms <- as.data.frame(rowMeans(dis.matrix))
sds <- as.data.frame(apply(dis.matrix, 1, sd))
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of mean distribution", x="Mean", y="Count")+
geom_vline(xintercept = mu, colour="red")+
geom_vline(xintercept = mean(as.matrix(rms)), colour="green")+
geom_text(aes(x=mu, label="Theoretical mean", y=10), colour="red", text=element_text(size=11))+
geom_text(aes(x=mean(as.matrix(rms)), label="Sample mean", y=30), colour="green", text=element_text(size=11))
mu <- 1/lambda      # mean
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of mean distribution", x="Mean", y="Count")+
geom_vline(xintercept = mu, colour="red")+
geom_vline(xintercept = mean(as.matrix(rms)), colour="green")+
geom_text(aes(x=mu, label="Theoretical mean", y=10), colour="red", text=element_text(size=11))+
geom_text(aes(x=mean(as.matrix(rms)), label="Sample mean", y=30), colour="green", text=element_text(size=11))
ggplot(sds, aes(x= sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x="Variance", y="Count")+
geom_vline(xintercept = vars, colour="red")+
geom_vline(xintercept = var(as.matrix(sds)), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = var(as.matrix(sds)), label="Sample variance", y=30), colour="green")
sds <- as.data.frame(apply(dis.matrix, 1, sd))
rms <- as.data.frame(rowMeans(dis.matrix))
ggplot(sds, aes(x= sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x="Variance", y="Count")+
geom_vline(xintercept = vars, colour="red")+
geom_vline(xintercept = var(as.matrix(sds)), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = var(as.matrix(sds)), label="Sample variance", y=30), colour="green")
sds <- sds^2
ggplot(sds, aes(x = sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = sds^2, colour = "red")+
geom_vline(xintercept = var(as.matrix(sds)), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = var(as.matrix(sds)), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = sds^2, colour = "red")+
geom_vline(xintercept = sds^2, colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = var(as.matrix(sds)), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = sds^2, colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = var(as.matrix(sds)), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = sds^2, colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = var(as.matrix(sds)), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = var(as.matrix(sds)), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(as.matrix(sds^2)), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
sds <- as.data.frame(apply(dis.matrix, 1, sd))
ggplot(sds, aes(x = sds))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
for(i in 1:sim.count){
dis.matrix <- rbind(dis.matrix,rexp(n, lambda))
}
rms <- as.data.frame(rowMeans(dis.matrix))
sds <- as.data.frame(apply(dis.matrix, 1, sd))
View(sds)
sds <- sds^2
View(sds)
sds <- as.data.frame(apply(dis.matrix, 1, sd))
View(sds)
n <- 40             # Number of exponentials to generate per simulation
lambda <- 0.2       # Rate parameter for rexp function
mu <- 1/lambda      # mean
sig <- 1/lambda     # standard deviation
vars <- sig^2       # calculate the variance
sim.count <- 1000   # Number of simulation to run
dis.matrix <- NULL  # Initialising data frame
for(i in 1:sim.count){
dis.matrix <- rbind(dis.matrix,rexp(n, lambda))
}
rms <- as.data.frame(rowMeans(dis.matrix))
sds <- as.data.frame(apply(dis.matrix, 1, sd))
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of mean distribution", x="Mean", y="Count")+
geom_vline(xintercept = mu, colour="red")+
geom_vline(xintercept = mean(as.matrix(rms)), colour="green")+
geom_text(aes(x=mu, label="Theoretical mean", y=10), colour="red", text=element_text(size=11))+
geom_text(aes(x=mean(as.matrix(rms)), label="Sample mean", y=30), colour="green", text=element_text(size=11))
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black")+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
labs(title="Histogram of mean distribution", x="Mean", y="Count")+
geom_vline(xintercept = mu, colour="red")+
geom_vline(xintercept = mean(as.matrix(rms)), colour="green")+
geom_text(aes(x=mu, label="Theoretical mean", y=10), colour="red", text=element_text(size=11))+
geom_text(aes(x=mean(as.matrix(rms)), label="Sample mean", y=30), colour="green", text=element_text(size=11))
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
scale_y_continuous()+
labs(title="Histogram of mean distribution", x="Mean", y="Count")+
geom_vline(xintercept = mu, colour="red")+
geom_vline(xintercept = mean(as.matrix(rms)), colour="green")+
geom_text(aes(x=mu, label="Theoretical mean", y=10), colour="red", text=element_text(size=11))+
geom_text(aes(x=mean(as.matrix(rms)), label="Sample mean", y=30), colour="green", text=element_text(size=11))
ggplot(rms, aes(x= rms))+
geom_histogram(fill="blue", colour="black", bins = 30)+
scale_x_continuous()+
labs(title="Histogram of mean distribution", x="Mean", y="Count")+
geom_vline(xintercept = mu, colour="red")+
geom_vline(xintercept = mean(as.matrix(rms)), colour="green")+
geom_text(aes(x=mu, label="Theoretical mean", y=10), colour="red", text=element_text(size=11))+
geom_text(aes(x=mean(as.matrix(rms)), label="Sample mean", y=30), colour="green", text=element_text(size=11))
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black", bin = 30)+
scale_x_continuous()+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black")+
scale_x_continuous()+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black", binwidth = 30)+
scale_x_continuous()+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black", bin=30)+
scale_x_continuous()+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
ggplot(sds, aes(x = sds^2))+
geom_histogram(fill="blue", colour="black", bins=30)+
scale_x_continuous()+
labs(title="Histogram of the variance distribution", x = "Variance", y = "Count")+
geom_vline(xintercept = vars, colour = "red")+
geom_vline(xintercept = mean(sds^2), colour="green")+
geom_text(aes(x = vars, label="Theoretical variance", y=10), colour="red")+
geom_text(aes(x = mean(sds^2), label="Sample variance", y=30), colour="green")
library(bootstrap)
t1<-bootstrap(rexp(n, lambda), sim.count, mean)
t1
library(boot)
library(ggplot2)
library(boot)
n <- 40             # Number of exponentials to generate per simulation
lambda <- 0.2       # Rate parameter for rexp function
mu <- 1/lambda      # mean
sig <- 1/lambda     # standard deviation
vars <- sig^2       # calculate the variance
sim.count <- 1000   # Number of simulation to run
dis.matrix <- NULL  # Initialising data frame
for(i in 1:sim.count){
dis.matrix <- rbind(dis.matrix,rexp(n, lambda))
}
rms <- as.data.frame(rowMeans(dis.matrix))
colnames(rms) <- "mean"
sds <- as.data.frame(apply(dis.matrix, 1, sd))
colnames(sds) <- "std"
View(rms)
t.test(rms$mean)
mean.test <- t.test(rms$mean)
mean.test$conf.int
mean.test$conf.int[1]
mean.test$conf.int[[]]
mean.test$conf.int[[1]]
mean.test$conf.int
var.test <- t.test(sds$std)
var.test$conf.int
